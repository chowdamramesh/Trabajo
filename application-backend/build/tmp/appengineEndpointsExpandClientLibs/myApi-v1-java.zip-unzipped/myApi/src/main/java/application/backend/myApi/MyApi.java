/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2016-10-17 16:43:55 UTC)
 * on 2016-10-28 at 06:02:40 UTC 
 * Modify at your own risk.
 */

package application.backend.myApi;

/**
 * Service definition for MyApi (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link MyApiRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class MyApi extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.22.0 of the myApi library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://myApplicationId.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "myApi/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public MyApi(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  MyApi(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "addMemberbyUser".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link AddMemberbyUser#execute()} method to invoke the remote operation.
   *
   * @param userName
   * @param phnNumOfMem
   * @return the request
   */
  public AddMemberbyUser addMemberbyUser(java.lang.String userName, java.lang.String phnNumOfMem) throws java.io.IOException {
    AddMemberbyUser result = new AddMemberbyUser(userName, phnNumOfMem);
    initialize(result);
    return result;
  }

  public class AddMemberbyUser extends MyApiRequest<application.backend.myApi.model.StringCollection> {

    private static final String REST_PATH = "addMemByUser/{userName}/{phnNumOfMem}";

    /**
     * Create a request for the method "addMemberbyUser".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link AddMemberbyUser#execute()} method to invoke the remote operation.
     * <p> {@link AddMemberbyUser#initialize(com.google.api.client.googleapis.services.AbstractGoogleC
     * lientRequest)} must be called to initialize this instance immediately after invoking the
     * constructor. </p>
     *
     * @param userName
     * @param phnNumOfMem
     * @since 1.13
     */
    protected AddMemberbyUser(java.lang.String userName, java.lang.String phnNumOfMem) {
      super(MyApi.this, "POST", REST_PATH, null, application.backend.myApi.model.StringCollection.class);
      this.userName = com.google.api.client.util.Preconditions.checkNotNull(userName, "Required parameter userName must be specified.");
      this.phnNumOfMem = com.google.api.client.util.Preconditions.checkNotNull(phnNumOfMem, "Required parameter phnNumOfMem must be specified.");
    }

    @Override
    public AddMemberbyUser setAlt(java.lang.String alt) {
      return (AddMemberbyUser) super.setAlt(alt);
    }

    @Override
    public AddMemberbyUser setFields(java.lang.String fields) {
      return (AddMemberbyUser) super.setFields(fields);
    }

    @Override
    public AddMemberbyUser setKey(java.lang.String key) {
      return (AddMemberbyUser) super.setKey(key);
    }

    @Override
    public AddMemberbyUser setOauthToken(java.lang.String oauthToken) {
      return (AddMemberbyUser) super.setOauthToken(oauthToken);
    }

    @Override
    public AddMemberbyUser setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddMemberbyUser) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddMemberbyUser setQuotaUser(java.lang.String quotaUser) {
      return (AddMemberbyUser) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddMemberbyUser setUserIp(java.lang.String userIp) {
      return (AddMemberbyUser) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String userName;

    /**

     */
    public java.lang.String getUserName() {
      return userName;
    }

    public AddMemberbyUser setUserName(java.lang.String userName) {
      this.userName = userName;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String phnNumOfMem;

    /**

     */
    public java.lang.String getPhnNumOfMem() {
      return phnNumOfMem;
    }

    public AddMemberbyUser setPhnNumOfMem(java.lang.String phnNumOfMem) {
      this.phnNumOfMem = phnNumOfMem;
      return this;
    }

    @Override
    public AddMemberbyUser set(String parameterName, Object value) {
      return (AddMemberbyUser) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "createProject".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link CreateProject#execute()} method to invoke the remote operation.
   *
   * @param username
   * @param projName
   * @param projDesc
   * @param projStart
   * @param projEnd
   * @return the request
   */
  public CreateProject createProject(java.lang.String username, java.lang.String projName, java.lang.String projDesc, com.google.api.client.util.DateTime projStart, com.google.api.client.util.DateTime projEnd) throws java.io.IOException {
    CreateProject result = new CreateProject(username, projName, projDesc, projStart, projEnd);
    initialize(result);
    return result;
  }

  public class CreateProject extends MyApiRequest<application.backend.myApi.model.ProjectDetails> {

    private static final String REST_PATH = "newProjectCreated/{username}/{projName}/{projDesc}/{projStart}/{projEnd}";

    /**
     * Create a request for the method "createProject".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link CreateProject#execute()} method to invoke the remote operation. <p>
     * {@link CreateProject#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientR
     * equest)} must be called to initialize this instance immediately after invoking the constructor.
     * </p>
     *
     * @param username
     * @param projName
     * @param projDesc
     * @param projStart
     * @param projEnd
     * @since 1.13
     */
    protected CreateProject(java.lang.String username, java.lang.String projName, java.lang.String projDesc, com.google.api.client.util.DateTime projStart, com.google.api.client.util.DateTime projEnd) {
      super(MyApi.this, "POST", REST_PATH, null, application.backend.myApi.model.ProjectDetails.class);
      this.username = com.google.api.client.util.Preconditions.checkNotNull(username, "Required parameter username must be specified.");
      this.projName = com.google.api.client.util.Preconditions.checkNotNull(projName, "Required parameter projName must be specified.");
      this.projDesc = com.google.api.client.util.Preconditions.checkNotNull(projDesc, "Required parameter projDesc must be specified.");
      this.projStart = com.google.api.client.util.Preconditions.checkNotNull(projStart, "Required parameter projStart must be specified.");
      this.projEnd = com.google.api.client.util.Preconditions.checkNotNull(projEnd, "Required parameter projEnd must be specified.");
    }

    @Override
    public CreateProject setAlt(java.lang.String alt) {
      return (CreateProject) super.setAlt(alt);
    }

    @Override
    public CreateProject setFields(java.lang.String fields) {
      return (CreateProject) super.setFields(fields);
    }

    @Override
    public CreateProject setKey(java.lang.String key) {
      return (CreateProject) super.setKey(key);
    }

    @Override
    public CreateProject setOauthToken(java.lang.String oauthToken) {
      return (CreateProject) super.setOauthToken(oauthToken);
    }

    @Override
    public CreateProject setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (CreateProject) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public CreateProject setQuotaUser(java.lang.String quotaUser) {
      return (CreateProject) super.setQuotaUser(quotaUser);
    }

    @Override
    public CreateProject setUserIp(java.lang.String userIp) {
      return (CreateProject) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String username;

    /**

     */
    public java.lang.String getUsername() {
      return username;
    }

    public CreateProject setUsername(java.lang.String username) {
      this.username = username;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String projName;

    /**

     */
    public java.lang.String getProjName() {
      return projName;
    }

    public CreateProject setProjName(java.lang.String projName) {
      this.projName = projName;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String projDesc;

    /**

     */
    public java.lang.String getProjDesc() {
      return projDesc;
    }

    public CreateProject setProjDesc(java.lang.String projDesc) {
      this.projDesc = projDesc;
      return this;
    }

    @com.google.api.client.util.Key
    private com.google.api.client.util.DateTime projStart;

    /**

     */
    public com.google.api.client.util.DateTime getProjStart() {
      return projStart;
    }

    public CreateProject setProjStart(com.google.api.client.util.DateTime projStart) {
      this.projStart = projStart;
      return this;
    }

    @com.google.api.client.util.Key
    private com.google.api.client.util.DateTime projEnd;

    /**

     */
    public com.google.api.client.util.DateTime getProjEnd() {
      return projEnd;
    }

    public CreateProject setProjEnd(com.google.api.client.util.DateTime projEnd) {
      this.projEnd = projEnd;
      return this;
    }

    @Override
    public CreateProject set(String parameterName, Object value) {
      return (CreateProject) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "createTask".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link CreateTask#execute()} method to invoke the remote operation.
   *
   * @param username
   * @param projName
   * @param taskName
   * @param taskDesc
   * @param taskStart
   * @param taskEnd
   * @return the request
   */
  public CreateTask createTask(java.lang.String username, java.lang.String projName, java.lang.String taskName, java.lang.String taskDesc, com.google.api.client.util.DateTime taskStart, com.google.api.client.util.DateTime taskEnd) throws java.io.IOException {
    CreateTask result = new CreateTask(username, projName, taskName, taskDesc, taskStart, taskEnd);
    initialize(result);
    return result;
  }

  public class CreateTask extends MyApiRequest<application.backend.myApi.model.TaskDetails> {

    private static final String REST_PATH = "newTaskCreated/{username}/{projName}/{TaskName}/{taskDesc}/{taskStart}/{taskEnd}";

    /**
     * Create a request for the method "createTask".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link CreateTask#execute()} method to invoke the remote operation. <p>
     * {@link
     * CreateTask#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param username
     * @param projName
     * @param taskName
     * @param taskDesc
     * @param taskStart
     * @param taskEnd
     * @since 1.13
     */
    protected CreateTask(java.lang.String username, java.lang.String projName, java.lang.String taskName, java.lang.String taskDesc, com.google.api.client.util.DateTime taskStart, com.google.api.client.util.DateTime taskEnd) {
      super(MyApi.this, "POST", REST_PATH, null, application.backend.myApi.model.TaskDetails.class);
      this.username = com.google.api.client.util.Preconditions.checkNotNull(username, "Required parameter username must be specified.");
      this.projName = com.google.api.client.util.Preconditions.checkNotNull(projName, "Required parameter projName must be specified.");
      this.taskName = com.google.api.client.util.Preconditions.checkNotNull(taskName, "Required parameter taskName must be specified.");
      this.taskDesc = com.google.api.client.util.Preconditions.checkNotNull(taskDesc, "Required parameter taskDesc must be specified.");
      this.taskStart = com.google.api.client.util.Preconditions.checkNotNull(taskStart, "Required parameter taskStart must be specified.");
      this.taskEnd = com.google.api.client.util.Preconditions.checkNotNull(taskEnd, "Required parameter taskEnd must be specified.");
    }

    @Override
    public CreateTask setAlt(java.lang.String alt) {
      return (CreateTask) super.setAlt(alt);
    }

    @Override
    public CreateTask setFields(java.lang.String fields) {
      return (CreateTask) super.setFields(fields);
    }

    @Override
    public CreateTask setKey(java.lang.String key) {
      return (CreateTask) super.setKey(key);
    }

    @Override
    public CreateTask setOauthToken(java.lang.String oauthToken) {
      return (CreateTask) super.setOauthToken(oauthToken);
    }

    @Override
    public CreateTask setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (CreateTask) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public CreateTask setQuotaUser(java.lang.String quotaUser) {
      return (CreateTask) super.setQuotaUser(quotaUser);
    }

    @Override
    public CreateTask setUserIp(java.lang.String userIp) {
      return (CreateTask) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String username;

    /**

     */
    public java.lang.String getUsername() {
      return username;
    }

    public CreateTask setUsername(java.lang.String username) {
      this.username = username;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String projName;

    /**

     */
    public java.lang.String getProjName() {
      return projName;
    }

    public CreateTask setProjName(java.lang.String projName) {
      this.projName = projName;
      return this;
    }

    @com.google.api.client.util.Key("TaskName")
    private java.lang.String taskName;

    /**

     */
    public java.lang.String getTaskName() {
      return taskName;
    }

    public CreateTask setTaskName(java.lang.String taskName) {
      this.taskName = taskName;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String taskDesc;

    /**

     */
    public java.lang.String getTaskDesc() {
      return taskDesc;
    }

    public CreateTask setTaskDesc(java.lang.String taskDesc) {
      this.taskDesc = taskDesc;
      return this;
    }

    @com.google.api.client.util.Key
    private com.google.api.client.util.DateTime taskStart;

    /**

     */
    public com.google.api.client.util.DateTime getTaskStart() {
      return taskStart;
    }

    public CreateTask setTaskStart(com.google.api.client.util.DateTime taskStart) {
      this.taskStart = taskStart;
      return this;
    }

    @com.google.api.client.util.Key
    private com.google.api.client.util.DateTime taskEnd;

    /**

     */
    public com.google.api.client.util.DateTime getTaskEnd() {
      return taskEnd;
    }

    public CreateTask setTaskEnd(com.google.api.client.util.DateTime taskEnd) {
      this.taskEnd = taskEnd;
      return this;
    }

    @Override
    public CreateTask set(String parameterName, Object value) {
      return (CreateTask) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "createTaskAccToProj".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link CreateTaskAccToProj#execute()} method to invoke the remote operation.
   *
   * @param username
   * @param projName
   * @param taskName
   * @param taskDesc
   * @param taskStart
   * @param taskEnd
   * @param phnNumOfUser
   * @return the request
   */
  public CreateTaskAccToProj createTaskAccToProj(java.lang.String username, java.lang.String projName, java.lang.String taskName, java.lang.String taskDesc, com.google.api.client.util.DateTime taskStart, com.google.api.client.util.DateTime taskEnd, java.lang.String phnNumOfUser) throws java.io.IOException {
    CreateTaskAccToProj result = new CreateTaskAccToProj(username, projName, taskName, taskDesc, taskStart, taskEnd, phnNumOfUser);
    initialize(result);
    return result;
  }

  public class CreateTaskAccToProj extends MyApiRequest<application.backend.myApi.model.StringCollection> {

    private static final String REST_PATH = "newTaskCreatedAccToProj/{username}/{projName}/{TaskName}/{taskDesc}/{taskStart}/{taskEnd}/{phnNumOfUser}";

    /**
     * Create a request for the method "createTaskAccToProj".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link CreateTaskAccToProj#execute()} method to invoke the remote
     * operation. <p> {@link CreateTaskAccToProj#initialize(com.google.api.client.googleapis.services.
     * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param username
     * @param projName
     * @param taskName
     * @param taskDesc
     * @param taskStart
     * @param taskEnd
     * @param phnNumOfUser
     * @since 1.13
     */
    protected CreateTaskAccToProj(java.lang.String username, java.lang.String projName, java.lang.String taskName, java.lang.String taskDesc, com.google.api.client.util.DateTime taskStart, com.google.api.client.util.DateTime taskEnd, java.lang.String phnNumOfUser) {
      super(MyApi.this, "POST", REST_PATH, null, application.backend.myApi.model.StringCollection.class);
      this.username = com.google.api.client.util.Preconditions.checkNotNull(username, "Required parameter username must be specified.");
      this.projName = com.google.api.client.util.Preconditions.checkNotNull(projName, "Required parameter projName must be specified.");
      this.taskName = com.google.api.client.util.Preconditions.checkNotNull(taskName, "Required parameter taskName must be specified.");
      this.taskDesc = com.google.api.client.util.Preconditions.checkNotNull(taskDesc, "Required parameter taskDesc must be specified.");
      this.taskStart = com.google.api.client.util.Preconditions.checkNotNull(taskStart, "Required parameter taskStart must be specified.");
      this.taskEnd = com.google.api.client.util.Preconditions.checkNotNull(taskEnd, "Required parameter taskEnd must be specified.");
      this.phnNumOfUser = com.google.api.client.util.Preconditions.checkNotNull(phnNumOfUser, "Required parameter phnNumOfUser must be specified.");
    }

    @Override
    public CreateTaskAccToProj setAlt(java.lang.String alt) {
      return (CreateTaskAccToProj) super.setAlt(alt);
    }

    @Override
    public CreateTaskAccToProj setFields(java.lang.String fields) {
      return (CreateTaskAccToProj) super.setFields(fields);
    }

    @Override
    public CreateTaskAccToProj setKey(java.lang.String key) {
      return (CreateTaskAccToProj) super.setKey(key);
    }

    @Override
    public CreateTaskAccToProj setOauthToken(java.lang.String oauthToken) {
      return (CreateTaskAccToProj) super.setOauthToken(oauthToken);
    }

    @Override
    public CreateTaskAccToProj setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (CreateTaskAccToProj) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public CreateTaskAccToProj setQuotaUser(java.lang.String quotaUser) {
      return (CreateTaskAccToProj) super.setQuotaUser(quotaUser);
    }

    @Override
    public CreateTaskAccToProj setUserIp(java.lang.String userIp) {
      return (CreateTaskAccToProj) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String username;

    /**

     */
    public java.lang.String getUsername() {
      return username;
    }

    public CreateTaskAccToProj setUsername(java.lang.String username) {
      this.username = username;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String projName;

    /**

     */
    public java.lang.String getProjName() {
      return projName;
    }

    public CreateTaskAccToProj setProjName(java.lang.String projName) {
      this.projName = projName;
      return this;
    }

    @com.google.api.client.util.Key("TaskName")
    private java.lang.String taskName;

    /**

     */
    public java.lang.String getTaskName() {
      return taskName;
    }

    public CreateTaskAccToProj setTaskName(java.lang.String taskName) {
      this.taskName = taskName;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String taskDesc;

    /**

     */
    public java.lang.String getTaskDesc() {
      return taskDesc;
    }

    public CreateTaskAccToProj setTaskDesc(java.lang.String taskDesc) {
      this.taskDesc = taskDesc;
      return this;
    }

    @com.google.api.client.util.Key
    private com.google.api.client.util.DateTime taskStart;

    /**

     */
    public com.google.api.client.util.DateTime getTaskStart() {
      return taskStart;
    }

    public CreateTaskAccToProj setTaskStart(com.google.api.client.util.DateTime taskStart) {
      this.taskStart = taskStart;
      return this;
    }

    @com.google.api.client.util.Key
    private com.google.api.client.util.DateTime taskEnd;

    /**

     */
    public com.google.api.client.util.DateTime getTaskEnd() {
      return taskEnd;
    }

    public CreateTaskAccToProj setTaskEnd(com.google.api.client.util.DateTime taskEnd) {
      this.taskEnd = taskEnd;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String phnNumOfUser;

    /**

     */
    public java.lang.String getPhnNumOfUser() {
      return phnNumOfUser;
    }

    public CreateTaskAccToProj setPhnNumOfUser(java.lang.String phnNumOfUser) {
      this.phnNumOfUser = phnNumOfUser;
      return this;
    }

    @Override
    public CreateTaskAccToProj set(String parameterName, Object value) {
      return (CreateTaskAccToProj) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "loginUsergcm".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link LoginUsergcm#execute()} method to invoke the remote operation.
   *
   * @param userName
   * @param pass
   * @return the request
   */
  public LoginUsergcm loginUsergcm(java.lang.String userName, java.lang.String pass) throws java.io.IOException {
    LoginUsergcm result = new LoginUsergcm(userName, pass);
    initialize(result);
    return result;
  }

  public class LoginUsergcm extends MyApiRequest<application.backend.myApi.model.UserDetialsGcm> {

    private static final String REST_PATH = "logINUserGcm/{userName}/{pass}";

    /**
     * Create a request for the method "loginUsergcm".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link LoginUsergcm#execute()} method to invoke the remote operation. <p>
     * {@link
     * LoginUsergcm#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param userName
     * @param pass
     * @since 1.13
     */
    protected LoginUsergcm(java.lang.String userName, java.lang.String pass) {
      super(MyApi.this, "POST", REST_PATH, null, application.backend.myApi.model.UserDetialsGcm.class);
      this.userName = com.google.api.client.util.Preconditions.checkNotNull(userName, "Required parameter userName must be specified.");
      this.pass = com.google.api.client.util.Preconditions.checkNotNull(pass, "Required parameter pass must be specified.");
    }

    @Override
    public LoginUsergcm setAlt(java.lang.String alt) {
      return (LoginUsergcm) super.setAlt(alt);
    }

    @Override
    public LoginUsergcm setFields(java.lang.String fields) {
      return (LoginUsergcm) super.setFields(fields);
    }

    @Override
    public LoginUsergcm setKey(java.lang.String key) {
      return (LoginUsergcm) super.setKey(key);
    }

    @Override
    public LoginUsergcm setOauthToken(java.lang.String oauthToken) {
      return (LoginUsergcm) super.setOauthToken(oauthToken);
    }

    @Override
    public LoginUsergcm setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (LoginUsergcm) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public LoginUsergcm setQuotaUser(java.lang.String quotaUser) {
      return (LoginUsergcm) super.setQuotaUser(quotaUser);
    }

    @Override
    public LoginUsergcm setUserIp(java.lang.String userIp) {
      return (LoginUsergcm) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String userName;

    /**

     */
    public java.lang.String getUserName() {
      return userName;
    }

    public LoginUsergcm setUserName(java.lang.String userName) {
      this.userName = userName;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String pass;

    /**

     */
    public java.lang.String getPass() {
      return pass;
    }

    public LoginUsergcm setPass(java.lang.String pass) {
      this.pass = pass;
      return this;
    }

    @Override
    public LoginUsergcm set(String parameterName, Object value) {
      return (LoginUsergcm) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "proMembers".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link ProMembers#execute()} method to invoke the remote operation.
   *
   * @param projName
   * @return the request
   */
  public ProMembers proMembers(java.lang.String projName) throws java.io.IOException {
    ProMembers result = new ProMembers(projName);
    initialize(result);
    return result;
  }

  public class ProMembers extends MyApiRequest<application.backend.myApi.model.UserDetialsGcmCollection> {

    private static final String REST_PATH = "proMembers/{projName}";

    /**
     * Create a request for the method "proMembers".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link ProMembers#execute()} method to invoke the remote operation. <p>
     * {@link
     * ProMembers#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param projName
     * @since 1.13
     */
    protected ProMembers(java.lang.String projName) {
      super(MyApi.this, "POST", REST_PATH, null, application.backend.myApi.model.UserDetialsGcmCollection.class);
      this.projName = com.google.api.client.util.Preconditions.checkNotNull(projName, "Required parameter projName must be specified.");
    }

    @Override
    public ProMembers setAlt(java.lang.String alt) {
      return (ProMembers) super.setAlt(alt);
    }

    @Override
    public ProMembers setFields(java.lang.String fields) {
      return (ProMembers) super.setFields(fields);
    }

    @Override
    public ProMembers setKey(java.lang.String key) {
      return (ProMembers) super.setKey(key);
    }

    @Override
    public ProMembers setOauthToken(java.lang.String oauthToken) {
      return (ProMembers) super.setOauthToken(oauthToken);
    }

    @Override
    public ProMembers setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ProMembers) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ProMembers setQuotaUser(java.lang.String quotaUser) {
      return (ProMembers) super.setQuotaUser(quotaUser);
    }

    @Override
    public ProMembers setUserIp(java.lang.String userIp) {
      return (ProMembers) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String projName;

    /**

     */
    public java.lang.String getProjName() {
      return projName;
    }

    public ProMembers setProjName(java.lang.String projName) {
      this.projName = projName;
      return this;
    }

    @Override
    public ProMembers set(String parameterName, Object value) {
      return (ProMembers) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "proTaskRetrieve".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link ProTaskRetrieve#execute()} method to invoke the remote operation.
   *
   * @param projName
   * @return the request
   */
  public ProTaskRetrieve proTaskRetrieve(java.lang.String projName) throws java.io.IOException {
    ProTaskRetrieve result = new ProTaskRetrieve(projName);
    initialize(result);
    return result;
  }

  public class ProTaskRetrieve extends MyApiRequest<application.backend.myApi.model.TaskDetailsCollection> {

    private static final String REST_PATH = "proTaskRetrieve/{projName}";

    /**
     * Create a request for the method "proTaskRetrieve".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link ProTaskRetrieve#execute()} method to invoke the remote operation.
     * <p> {@link ProTaskRetrieve#initialize(com.google.api.client.googleapis.services.AbstractGoogleC
     * lientRequest)} must be called to initialize this instance immediately after invoking the
     * constructor. </p>
     *
     * @param projName
     * @since 1.13
     */
    protected ProTaskRetrieve(java.lang.String projName) {
      super(MyApi.this, "POST", REST_PATH, null, application.backend.myApi.model.TaskDetailsCollection.class);
      this.projName = com.google.api.client.util.Preconditions.checkNotNull(projName, "Required parameter projName must be specified.");
    }

    @Override
    public ProTaskRetrieve setAlt(java.lang.String alt) {
      return (ProTaskRetrieve) super.setAlt(alt);
    }

    @Override
    public ProTaskRetrieve setFields(java.lang.String fields) {
      return (ProTaskRetrieve) super.setFields(fields);
    }

    @Override
    public ProTaskRetrieve setKey(java.lang.String key) {
      return (ProTaskRetrieve) super.setKey(key);
    }

    @Override
    public ProTaskRetrieve setOauthToken(java.lang.String oauthToken) {
      return (ProTaskRetrieve) super.setOauthToken(oauthToken);
    }

    @Override
    public ProTaskRetrieve setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ProTaskRetrieve) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ProTaskRetrieve setQuotaUser(java.lang.String quotaUser) {
      return (ProTaskRetrieve) super.setQuotaUser(quotaUser);
    }

    @Override
    public ProTaskRetrieve setUserIp(java.lang.String userIp) {
      return (ProTaskRetrieve) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String projName;

    /**

     */
    public java.lang.String getProjName() {
      return projName;
    }

    public ProTaskRetrieve setProjName(java.lang.String projName) {
      this.projName = projName;
      return this;
    }

    @Override
    public ProTaskRetrieve set(String parameterName, Object value) {
      return (ProTaskRetrieve) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "projectRetrieve".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link ProjectRetrieve#execute()} method to invoke the remote operation.
   *
   * @param userName
   * @param projName
   * @return the request
   */
  public ProjectRetrieve projectRetrieve(java.lang.String userName, java.lang.String projName) throws java.io.IOException {
    ProjectRetrieve result = new ProjectRetrieve(userName, projName);
    initialize(result);
    return result;
  }

  public class ProjectRetrieve extends MyApiRequest<application.backend.myApi.model.ProjectDetails> {

    private static final String REST_PATH = "projectRetrieve/{userName}/{projName}";

    /**
     * Create a request for the method "projectRetrieve".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link ProjectRetrieve#execute()} method to invoke the remote operation.
     * <p> {@link ProjectRetrieve#initialize(com.google.api.client.googleapis.services.AbstractGoogleC
     * lientRequest)} must be called to initialize this instance immediately after invoking the
     * constructor. </p>
     *
     * @param userName
     * @param projName
     * @since 1.13
     */
    protected ProjectRetrieve(java.lang.String userName, java.lang.String projName) {
      super(MyApi.this, "POST", REST_PATH, null, application.backend.myApi.model.ProjectDetails.class);
      this.userName = com.google.api.client.util.Preconditions.checkNotNull(userName, "Required parameter userName must be specified.");
      this.projName = com.google.api.client.util.Preconditions.checkNotNull(projName, "Required parameter projName must be specified.");
    }

    @Override
    public ProjectRetrieve setAlt(java.lang.String alt) {
      return (ProjectRetrieve) super.setAlt(alt);
    }

    @Override
    public ProjectRetrieve setFields(java.lang.String fields) {
      return (ProjectRetrieve) super.setFields(fields);
    }

    @Override
    public ProjectRetrieve setKey(java.lang.String key) {
      return (ProjectRetrieve) super.setKey(key);
    }

    @Override
    public ProjectRetrieve setOauthToken(java.lang.String oauthToken) {
      return (ProjectRetrieve) super.setOauthToken(oauthToken);
    }

    @Override
    public ProjectRetrieve setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ProjectRetrieve) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ProjectRetrieve setQuotaUser(java.lang.String quotaUser) {
      return (ProjectRetrieve) super.setQuotaUser(quotaUser);
    }

    @Override
    public ProjectRetrieve setUserIp(java.lang.String userIp) {
      return (ProjectRetrieve) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String userName;

    /**

     */
    public java.lang.String getUserName() {
      return userName;
    }

    public ProjectRetrieve setUserName(java.lang.String userName) {
      this.userName = userName;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String projName;

    /**

     */
    public java.lang.String getProjName() {
      return projName;
    }

    public ProjectRetrieve setProjName(java.lang.String projName) {
      this.projName = projName;
      return this;
    }

    @Override
    public ProjectRetrieve set(String parameterName, Object value) {
      return (ProjectRetrieve) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "register".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link Register#execute()} method to invoke the remote operation.
   *
   * @param regId
   * @return the request
   */
  public Register register(java.lang.String regId) throws java.io.IOException {
    Register result = new Register(regId);
    initialize(result);
    return result;
  }

  public class Register extends MyApiRequest<application.backend.myApi.model.StoreToDatastore> {

    private static final String REST_PATH = "storeData/{regId}";

    /**
     * Create a request for the method "register".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link Register#execute()} method to invoke the remote operation. <p>
     * {@link
     * Register#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param regId
     * @since 1.13
     */
    protected Register(java.lang.String regId) {
      super(MyApi.this, "POST", REST_PATH, null, application.backend.myApi.model.StoreToDatastore.class);
      this.regId = com.google.api.client.util.Preconditions.checkNotNull(regId, "Required parameter regId must be specified.");
    }

    @Override
    public Register setAlt(java.lang.String alt) {
      return (Register) super.setAlt(alt);
    }

    @Override
    public Register setFields(java.lang.String fields) {
      return (Register) super.setFields(fields);
    }

    @Override
    public Register setKey(java.lang.String key) {
      return (Register) super.setKey(key);
    }

    @Override
    public Register setOauthToken(java.lang.String oauthToken) {
      return (Register) super.setOauthToken(oauthToken);
    }

    @Override
    public Register setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Register) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Register setQuotaUser(java.lang.String quotaUser) {
      return (Register) super.setQuotaUser(quotaUser);
    }

    @Override
    public Register setUserIp(java.lang.String userIp) {
      return (Register) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String regId;

    /**

     */
    public java.lang.String getRegId() {
      return regId;
    }

    public Register setRegId(java.lang.String regId) {
      this.regId = regId;
      return this;
    }

    @Override
    public Register set(String parameterName, Object value) {
      return (Register) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "retrive".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link Retrive#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public Retrive retrive() throws java.io.IOException {
    Retrive result = new Retrive();
    initialize(result);
    return result;
  }

  public class Retrive extends MyApiRequest<application.backend.myApi.model.StoreToDatastoreCollection> {

    private static final String REST_PATH = "retrive";

    /**
     * Create a request for the method "retrive".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link Retrive#execute()} method to invoke the remote operation. <p>
     * {@link
     * Retrive#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected Retrive() {
      super(MyApi.this, "POST", REST_PATH, null, application.backend.myApi.model.StoreToDatastoreCollection.class);
    }

    @Override
    public Retrive setAlt(java.lang.String alt) {
      return (Retrive) super.setAlt(alt);
    }

    @Override
    public Retrive setFields(java.lang.String fields) {
      return (Retrive) super.setFields(fields);
    }

    @Override
    public Retrive setKey(java.lang.String key) {
      return (Retrive) super.setKey(key);
    }

    @Override
    public Retrive setOauthToken(java.lang.String oauthToken) {
      return (Retrive) super.setOauthToken(oauthToken);
    }

    @Override
    public Retrive setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Retrive) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Retrive setQuotaUser(java.lang.String quotaUser) {
      return (Retrive) super.setQuotaUser(quotaUser);
    }

    @Override
    public Retrive setUserIp(java.lang.String userIp) {
      return (Retrive) super.setUserIp(userIp);
    }

    @Override
    public Retrive set(String parameterName, Object value) {
      return (Retrive) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "retriveAccToUser".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link RetriveAccToUser#execute()} method to invoke the remote operation.
   *
   * @param userName
   * @return the request
   */
  public RetriveAccToUser retriveAccToUser(java.lang.String userName) throws java.io.IOException {
    RetriveAccToUser result = new RetriveAccToUser(userName);
    initialize(result);
    return result;
  }

  public class RetriveAccToUser extends MyApiRequest<application.backend.myApi.model.ProjectDetailsCollection> {

    private static final String REST_PATH = "retriveAccToUser/{userName}";

    /**
     * Create a request for the method "retriveAccToUser".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link RetriveAccToUser#execute()} method to invoke the remote operation.
     * <p> {@link RetriveAccToUser#initialize(com.google.api.client.googleapis.services.AbstractGoogle
     * ClientRequest)} must be called to initialize this instance immediately after invoking the
     * constructor. </p>
     *
     * @param userName
     * @since 1.13
     */
    protected RetriveAccToUser(java.lang.String userName) {
      super(MyApi.this, "POST", REST_PATH, null, application.backend.myApi.model.ProjectDetailsCollection.class);
      this.userName = com.google.api.client.util.Preconditions.checkNotNull(userName, "Required parameter userName must be specified.");
    }

    @Override
    public RetriveAccToUser setAlt(java.lang.String alt) {
      return (RetriveAccToUser) super.setAlt(alt);
    }

    @Override
    public RetriveAccToUser setFields(java.lang.String fields) {
      return (RetriveAccToUser) super.setFields(fields);
    }

    @Override
    public RetriveAccToUser setKey(java.lang.String key) {
      return (RetriveAccToUser) super.setKey(key);
    }

    @Override
    public RetriveAccToUser setOauthToken(java.lang.String oauthToken) {
      return (RetriveAccToUser) super.setOauthToken(oauthToken);
    }

    @Override
    public RetriveAccToUser setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RetriveAccToUser) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RetriveAccToUser setQuotaUser(java.lang.String quotaUser) {
      return (RetriveAccToUser) super.setQuotaUser(quotaUser);
    }

    @Override
    public RetriveAccToUser setUserIp(java.lang.String userIp) {
      return (RetriveAccToUser) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String userName;

    /**

     */
    public java.lang.String getUserName() {
      return userName;
    }

    public RetriveAccToUser setUserName(java.lang.String userName) {
      this.userName = userName;
      return this;
    }

    @Override
    public RetriveAccToUser set(String parameterName, Object value) {
      return (RetriveAccToUser) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "retriveMemAccToUser".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link RetriveMemAccToUser#execute()} method to invoke the remote operation.
   *
   * @param userName
   * @return the request
   */
  public RetriveMemAccToUser retriveMemAccToUser(java.lang.String userName) throws java.io.IOException {
    RetriveMemAccToUser result = new RetriveMemAccToUser(userName);
    initialize(result);
    return result;
  }

  public class RetriveMemAccToUser extends MyApiRequest<application.backend.myApi.model.UserDetialsGcmCollection> {

    private static final String REST_PATH = "retiveMemAccToUser/{userName}";

    /**
     * Create a request for the method "retriveMemAccToUser".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link RetriveMemAccToUser#execute()} method to invoke the remote
     * operation. <p> {@link RetriveMemAccToUser#initialize(com.google.api.client.googleapis.services.
     * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param userName
     * @since 1.13
     */
    protected RetriveMemAccToUser(java.lang.String userName) {
      super(MyApi.this, "POST", REST_PATH, null, application.backend.myApi.model.UserDetialsGcmCollection.class);
      this.userName = com.google.api.client.util.Preconditions.checkNotNull(userName, "Required parameter userName must be specified.");
    }

    @Override
    public RetriveMemAccToUser setAlt(java.lang.String alt) {
      return (RetriveMemAccToUser) super.setAlt(alt);
    }

    @Override
    public RetriveMemAccToUser setFields(java.lang.String fields) {
      return (RetriveMemAccToUser) super.setFields(fields);
    }

    @Override
    public RetriveMemAccToUser setKey(java.lang.String key) {
      return (RetriveMemAccToUser) super.setKey(key);
    }

    @Override
    public RetriveMemAccToUser setOauthToken(java.lang.String oauthToken) {
      return (RetriveMemAccToUser) super.setOauthToken(oauthToken);
    }

    @Override
    public RetriveMemAccToUser setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RetriveMemAccToUser) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RetriveMemAccToUser setQuotaUser(java.lang.String quotaUser) {
      return (RetriveMemAccToUser) super.setQuotaUser(quotaUser);
    }

    @Override
    public RetriveMemAccToUser setUserIp(java.lang.String userIp) {
      return (RetriveMemAccToUser) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String userName;

    /**

     */
    public java.lang.String getUserName() {
      return userName;
    }

    public RetriveMemAccToUser setUserName(java.lang.String userName) {
      this.userName = userName;
      return this;
    }

    @Override
    public RetriveMemAccToUser set(String parameterName, Object value) {
      return (RetriveMemAccToUser) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "retriveTaskAccToUser".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link RetriveTaskAccToUser#execute()} method to invoke the remote
   * operation.
   *
   * @param userName
   * @return the request
   */
  public RetriveTaskAccToUser retriveTaskAccToUser(java.lang.String userName) throws java.io.IOException {
    RetriveTaskAccToUser result = new RetriveTaskAccToUser(userName);
    initialize(result);
    return result;
  }

  public class RetriveTaskAccToUser extends MyApiRequest<application.backend.myApi.model.TaskDetailsCollection> {

    private static final String REST_PATH = "retriveTasksAccToUser/{userName}";

    /**
     * Create a request for the method "retriveTaskAccToUser".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link RetriveTaskAccToUser#execute()} method to invoke the remote
     * operation. <p> {@link RetriveTaskAccToUser#initialize(com.google.api.client.googleapis.services
     * .AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param userName
     * @since 1.13
     */
    protected RetriveTaskAccToUser(java.lang.String userName) {
      super(MyApi.this, "POST", REST_PATH, null, application.backend.myApi.model.TaskDetailsCollection.class);
      this.userName = com.google.api.client.util.Preconditions.checkNotNull(userName, "Required parameter userName must be specified.");
    }

    @Override
    public RetriveTaskAccToUser setAlt(java.lang.String alt) {
      return (RetriveTaskAccToUser) super.setAlt(alt);
    }

    @Override
    public RetriveTaskAccToUser setFields(java.lang.String fields) {
      return (RetriveTaskAccToUser) super.setFields(fields);
    }

    @Override
    public RetriveTaskAccToUser setKey(java.lang.String key) {
      return (RetriveTaskAccToUser) super.setKey(key);
    }

    @Override
    public RetriveTaskAccToUser setOauthToken(java.lang.String oauthToken) {
      return (RetriveTaskAccToUser) super.setOauthToken(oauthToken);
    }

    @Override
    public RetriveTaskAccToUser setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RetriveTaskAccToUser) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RetriveTaskAccToUser setQuotaUser(java.lang.String quotaUser) {
      return (RetriveTaskAccToUser) super.setQuotaUser(quotaUser);
    }

    @Override
    public RetriveTaskAccToUser setUserIp(java.lang.String userIp) {
      return (RetriveTaskAccToUser) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String userName;

    /**

     */
    public java.lang.String getUserName() {
      return userName;
    }

    public RetriveTaskAccToUser setUserName(java.lang.String userName) {
      this.userName = userName;
      return this;
    }

    @Override
    public RetriveTaskAccToUser set(String parameterName, Object value) {
      return (RetriveTaskAccToUser) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "sayHi".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link SayHi#execute()} method to invoke the remote operation.
   *
   * @param name
   * @return the request
   */
  public SayHi sayHi(java.lang.String name) throws java.io.IOException {
    SayHi result = new SayHi(name);
    initialize(result);
    return result;
  }

  public class SayHi extends MyApiRequest<application.backend.myApi.model.MyBean> {

    private static final String REST_PATH = "sayHi/{name}";

    /**
     * Create a request for the method "sayHi".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link SayHi#execute()} method to invoke the remote operation. <p> {@link
     * SayHi#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param name
     * @since 1.13
     */
    protected SayHi(java.lang.String name) {
      super(MyApi.this, "POST", REST_PATH, null, application.backend.myApi.model.MyBean.class);
      this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
    }

    @Override
    public SayHi setAlt(java.lang.String alt) {
      return (SayHi) super.setAlt(alt);
    }

    @Override
    public SayHi setFields(java.lang.String fields) {
      return (SayHi) super.setFields(fields);
    }

    @Override
    public SayHi setKey(java.lang.String key) {
      return (SayHi) super.setKey(key);
    }

    @Override
    public SayHi setOauthToken(java.lang.String oauthToken) {
      return (SayHi) super.setOauthToken(oauthToken);
    }

    @Override
    public SayHi setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (SayHi) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public SayHi setQuotaUser(java.lang.String quotaUser) {
      return (SayHi) super.setQuotaUser(quotaUser);
    }

    @Override
    public SayHi setUserIp(java.lang.String userIp) {
      return (SayHi) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String name;

    /**

     */
    public java.lang.String getName() {
      return name;
    }

    public SayHi setName(java.lang.String name) {
      this.name = name;
      return this;
    }

    @Override
    public SayHi set(String parameterName, Object value) {
      return (SayHi) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "taskRetrieve".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link TaskRetrieve#execute()} method to invoke the remote operation.
   *
   * @param taskName
   * @return the request
   */
  public TaskRetrieve taskRetrieve(java.lang.String taskName) throws java.io.IOException {
    TaskRetrieve result = new TaskRetrieve(taskName);
    initialize(result);
    return result;
  }

  public class TaskRetrieve extends MyApiRequest<application.backend.myApi.model.TaskDetails> {

    private static final String REST_PATH = "taskRetrieve/{taskName}";

    /**
     * Create a request for the method "taskRetrieve".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link TaskRetrieve#execute()} method to invoke the remote operation. <p>
     * {@link
     * TaskRetrieve#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param taskName
     * @since 1.13
     */
    protected TaskRetrieve(java.lang.String taskName) {
      super(MyApi.this, "POST", REST_PATH, null, application.backend.myApi.model.TaskDetails.class);
      this.taskName = com.google.api.client.util.Preconditions.checkNotNull(taskName, "Required parameter taskName must be specified.");
    }

    @Override
    public TaskRetrieve setAlt(java.lang.String alt) {
      return (TaskRetrieve) super.setAlt(alt);
    }

    @Override
    public TaskRetrieve setFields(java.lang.String fields) {
      return (TaskRetrieve) super.setFields(fields);
    }

    @Override
    public TaskRetrieve setKey(java.lang.String key) {
      return (TaskRetrieve) super.setKey(key);
    }

    @Override
    public TaskRetrieve setOauthToken(java.lang.String oauthToken) {
      return (TaskRetrieve) super.setOauthToken(oauthToken);
    }

    @Override
    public TaskRetrieve setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (TaskRetrieve) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public TaskRetrieve setQuotaUser(java.lang.String quotaUser) {
      return (TaskRetrieve) super.setQuotaUser(quotaUser);
    }

    @Override
    public TaskRetrieve setUserIp(java.lang.String userIp) {
      return (TaskRetrieve) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String taskName;

    /**

     */
    public java.lang.String getTaskName() {
      return taskName;
    }

    public TaskRetrieve setTaskName(java.lang.String taskName) {
      this.taskName = taskName;
      return this;
    }

    @Override
    public TaskRetrieve set(String parameterName, Object value) {
      return (TaskRetrieve) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link MyApi}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link MyApi}. */
    @Override
    public MyApi build() {
      return new MyApi(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link MyApiRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setMyApiRequestInitializer(
        MyApiRequestInitializer myapiRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(myapiRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
